generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Podcast {
  id            Int     @id @default(autoincrement())
  trackId       Int     @unique
  trackName     String
  artistName    String
  feedUrl        String?
  artworkUrl600  String?

  queues     Queue[]
  favorites  Favorite[]
  recents    Recent[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  queue     Queue[]
  favorites Favorite[]
  recents   Recent[]
}

model Queue {
  id        Int      @id @default(autoincrement())
  userId    Int
  podcastId Int
  createdAt DateTime @default(now())

  user     User    @relation(fields: [userId], references: [id])
  podcast  Podcast @relation(fields: [podcastId], references: [id])

  @@unique([userId, podcastId], name: "userId_podcastId")
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  podcastId Int
  createdAt DateTime @default(now())

  user     User    @relation(fields: [userId], references: [id])
  podcast  Podcast @relation(fields: [podcastId], references: [id])

  @@unique([userId, podcastId], name: "userId_podcastId")
}

model Recent {
  id        Int      @id @default(autoincrement())
  userId    Int
  podcastId Int
  createdAt DateTime @default(now())

  user     User    @relation(fields: [userId], references: [id])
  podcast  Podcast @relation(fields: [podcastId], references: [trackId])

  @@unique([userId, podcastId], name: "userId_podcastId") // ensure uniqueness per user
}